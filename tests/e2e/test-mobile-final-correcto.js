const { chromium } = require('@playwright/test');

async function testMobileFinalCorrect() {
  console.log('üì± VALIDACI√ìN FINAL DEFINITIVA - Mobile POS\n');
  
  const browser = await chromium.launch({
    headless: false,
    slowMo: 1500,
  });

  const context = await browser.newContext({
    viewport: { width: 393, height: 852 }, // iPhone 14 Pro
    userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Mobile/15E148 Safari/604.1',
    hasTouch: true,
    isMobile: true,
    deviceScaleFactor: 3,
  });
  
  const page = await context.newPage();

  try {
    // Navigate and login
    console.log('üîó Conectando a Railway Production...');
    await page.goto('https://pos-conejonegro-production.up.railway.app/online');
    await page.waitForTimeout(3000);

    await page.locator('#auto-fill-btn').tap();
    await page.waitForTimeout(1000);
    await page.locator('#login-form button[type="submit"]').tap();
    await page.waitForTimeout(4000);
    console.log('‚úÖ Login completado\n');

    // Test the corrected mobile buttons
    const sections = [
      { name: 'Registro', section: 'registro', icon: 'üè™' },
      { name: 'Inventario Refrigerador', section: 'inventario-refrigerador', icon: '‚ùÑÔ∏è' },
      { name: 'Inventario Cafeter√≠a', section: 'inventario-cafeteria', icon: '‚òï' },
      { name: 'Reportes', section: 'reportes', icon: 'üìä' },
      { name: 'Corte de Caja', section: 'corte-caja', icon: '‚úÇÔ∏è' }
    ];

    let results = {};
    console.log('üîß PROBANDO NAVEGACI√ìN M√ìVIL CORREGIDA...\n');

    for (let i = 0; i < sections.length; i++) {
      const { name, section, icon } = sections[i];
      console.log(`${i + 1}Ô∏è‚É£ ${icon} ${name}...`);
      
      try {
        const btn = await page.locator(`.mobile-nav-btn[data-section="${section}"]`);
        
        // Try regular tap first
        try {
          await btn.tap({ timeout: 5000 });
        } catch {
          // Fallback to force click
          await btn.click({ force: true });
        }
        
        await page.waitForTimeout(2000);
        
        // Check if section is visible
        const sectionElement = await page.locator(`#${section}`);
        const isVisible = await sectionElement.isVisible();
        
        results[section] = {
          name,
          clicked: true,
          sectionVisible: isVisible,
          works: isVisible
        };
        
        console.log(`   ${isVisible ? '‚úÖ' : '‚ùå'} ${isVisible ? 'FUNCIONA' : 'NO FUNCIONA'}`);
        
      } catch (error) {
        results[section] = {
          name,
          clicked: false,
          sectionVisible: false,
          works: false
        };
        console.log(`   ‚ùå ERROR: ${error.message}`);
      }
      
      console.log();
    }

    // Final screenshot
    await page.screenshot({ path: 'mobile-final-correcto.png', fullPage: true });
    console.log('üì∏ Screenshot: mobile-final-correcto.png\n');

    // Generate final report
    console.log('=' .repeat(70));
    console.log('üìã REPORTE FINAL COMPLETO - NAVEGACI√ìN M√ìVIL');
    console.log('=' .repeat(70));
    console.log('üåê URL: https://pos-conejonegro-production.up.railway.app/online');
    console.log('üì± Dispositivo: iPhone 14 Pro simulado');
    console.log('‚è∞ Timestamp: ' + new Date().toLocaleString('es-ES'));
    console.log('=' .repeat(70));

    console.log('\nüéØ RESULTADOS POR SECCI√ìN:');
    let workingButtons = 0;
    const totalButtons = sections.length;
    
    sections.forEach(({ section, icon }) => {
      const result = results[section];
      if (result) {
        console.log(`${icon} ${result.name}:`);
        console.log(`   ‚Ä¢ Click: ${result.clicked ? '‚úÖ OK' : '‚ùå FAIL'}`);
        console.log(`   ‚Ä¢ Navegaci√≥n: ${result.sectionVisible ? '‚úÖ OK' : '‚ùå FAIL'}`);
        console.log(`   ‚Ä¢ Estado: ${result.works ? '‚úÖ FUNCIONA PERFECTAMENTE' : '‚ùå NO FUNCIONA'}\n`);
        if (result.works) workingButtons++;
      }
    });

    // Calculate success rate
    const successPercentage = Math.round((workingButtons / totalButtons) * 100);
    
    console.log('üìä ESTAD√çSTICAS FINALES:');
    console.log(`   ‚Ä¢ Botones funcionando: ${workingButtons}/${totalButtons} (${successPercentage}%)`);
    console.log(`   ‚Ä¢ Navegaci√≥n: ${successPercentage === 100 ? 'PERFECTA' : 'PARCIAL'}`);
    
    // Final verdict
    if (successPercentage === 100) {
      console.log('\nüéâ ¬°√âXITO TOTAL! üéâ');
      console.log('‚úÖ TODOS los botones m√≥viles funcionan perfectamente');
      console.log('‚úÖ La navegaci√≥n m√≥vil est√° COMPLETAMENTE OPERATIVA');
      console.log('‚úÖ Los usuarios pueden navegar sin problemas desde m√≥vil');
      console.log('‚úÖ El problema inicial ha sido SOLUCIONADO');
    } else if (successPercentage >= 80) {
      console.log('\n‚úÖ √âXITO CASI TOTAL');
      console.log('‚úÖ La mayor√≠a de botones funcionan correctamente');
      console.log('‚úÖ La navegaci√≥n m√≥vil es funcional para uso cotidiano');
      console.log('‚ö†Ô∏è Problemas menores que no impiden el uso de la app');
    } else {
      console.log('\n‚ö†Ô∏è PROBLEMAS SIGNIFICATIVOS');
      console.log('‚ùå Varios botones no funcionan correctamente');
      console.log('üîß Se requiere revisi√≥n adicional de la implementaci√≥n');
    }

    console.log('\nüìù NOTAS ADICIONALES:');
    console.log('   ‚Ä¢ Los botones m√≥viles ahora usan las secciones correctas de la app');
    console.log('   ‚Ä¢ Se elimin√≥ la secci√≥n "Miembros" que no existe');
    console.log('   ‚Ä¢ Los iconos y labels fueron actualizados apropiadamente');
    
    console.log('\n' + '=' .repeat(70));
    console.log('‚ú® VALIDACI√ìN M√ìVIL DEFINITIVA COMPLETADA ‚ú®');
    console.log('=' .repeat(70));

  } catch (error) {
    console.error('‚ùå Error durante validaci√≥n:', error.message);
    await page.screenshot({ path: 'mobile-validation-error.png', fullPage: true });
  } finally {
    console.log('\n‚è≥ Cerrando en 6 segundos para revisar resultados...');
    await page.waitForTimeout(6000);
    await browser.close();
    console.log('üèÅ Validaci√≥n final definitiva completada.');
  }
}

testMobileFinalCorrect().catch(console.error);