{
    "name":  "pos-conejo-negro",
    "version":  "1.0.0",
    "description":  "Point of Sale system for Conejo Negro Cafe with cloud backup",
    "main":  "server.js",
    "engines":  {
                    "node":  "18.x",
                    "npm":  "\u003e=8.0.0"
                },
    "scripts":  {
                    "test:online":  "node ./tests/diagnostics/online-diagnostics.js --url https://pos-conejo-negro.onrender.com/online",
                    "test:online:headful":  "node ./tests/diagnostics/online-diagnostics.js --url https://pos-conejo-negro.onrender.com/online --headless=false",
                    "test:online:mobile-only":  "node ./tests/diagnostics/online-diagnostics.js --url https://pos-conejo-negro.onrender.com/online --desktop=false",
    "start": "node server-minimal.js",
                    "dev":  "nodemon server.js --ignore tests/ --ignore docs/",
                    "dev:watch":  "nodemon server.js --watch *.js --watch routes/ --watch utils/ --watch middleware/",
                    "dev:debug":  "nodemon --inspect server.js",
                    "setup":  "node setup.js",
                    "setup:env":  "cp .env.example .env \u0026\u0026 echo \u0027Environment file created. Please edit .env with your values.\u0027",
                    "setup:db":  "node initDatabase.js",
                    "setup:full":  "npm run setup:env \u0026\u0026 npm install \u0026\u0026 npm run setup:db",
                    "build":  "echo \u0027No build step required\u0027",
                    "build:taskmaster":  "node scripts/postbuild-taskmaster.js",
                    "migrate":  "node utils/migrate.js",
                    "clean":  "rm -rf node_modules package-lock.json \u0026\u0026 npm install",
                    "reset":  "npm run clean \u0026\u0026 npm run setup:full",
                    "test":  "npm run test:unit \u0026\u0026 npm run test:integration \u0026\u0026 npm run test:e2e",
                    "test:unit":  "jest --config=tests/config/jest.config.js tests/unit",
                    "test:integration":  "jest --config=tests/config/jest.config.js tests/integration --runInBand",
                    "test:e2e":  "playwright test --config=playwright.config.js",
                    "test:e2e:chromium":  "playwright test --config=playwright.config.js --project=chromium",
                    "test:e2e:firefox":  "playwright test --config=playwright.config.js --project=firefox",
                    "test:e2e:webkit":  "playwright test --config=playwright.config.js --project=webkit",
                    "test:e2e:mobile":  "playwright test --config=playwright.config.js --project=\u0027Mobile Chrome\u0027 --project=\u0027Mobile Safari\u0027",
                    "test:coverage":  "jest --config=tests/config/jest.config.js --coverage",
                    "test:watch":  "jest --config=tests/config/jest.config.js --watch",
                    "test:security":  "npm audit \u0026\u0026 node tests/security/security-tests.js",
                    "test:performance":  "node tests/performance/load-tests.js",
                    "test:performance:memory":  "clinic doctor --on-port=\u0027curl http://localhost:$PORT/health\u0027 -- node server.js",
                    "test:lint":  "eslint . --ext .js",
                    "test:lint:security":  "eslint . --ext .js --config .eslintrc.security.json",
                    "mcp":  "npx @playwright/mcp --port 3001",
                    "mcp:headless":  "npx @playwright/mcp --port 3001 --headless",
                    "mcp:dev":  "npx @playwright/mcp --port 3001 --browser chromium --device \"iPhone 15\"",
                    "test:visual":  "npm run test:e2e -- --grep \"@visual\"",
                    "test:visual:update":  "UPDATE_SCREENSHOTS=1 npm run test:visual",
                    "monitor:start":  "node scripts/monitoring/monitor-service.js start",
                    "monitor:stop":  "node scripts/monitoring/monitor-service.js stop",
                    "monitor:restart":  "node scripts/monitoring/monitor-service.js restart",
                    "monitor:status":  "node scripts/monitoring/monitor-service.js status",
                    "monitor:test":  "node scripts/monitoring/monitor-service.js test",
                    "monitor:dashboard":  "node scripts/monitoring/health-dashboard.js generate",
                    "monitor:dashboard:serve":  "node scripts/monitoring/health-dashboard.js serve",
                    "monitor:alerts":  "node scripts/monitoring/alert-system.js test",
                    "monitor:install":  "node scripts/monitoring/install-service.js",
                    "hive:init":  "node hive-init.js",
                    "hive:track":  "node trigger-deployment.js track-push",
                    "hive:status":  "node trigger-deployment.js check-status",
                    "hive:stats":  "node trigger-deployment.js deployment-stats",
                    "hive:query":  "node trigger-deployment.js query-deployments",
                    "hive:install-hooks":  "node trigger-deployment.js install-hooks",
                    "deploy:validate":  "node validate-render-deploy.js",
                    "deploy:health":  "node scripts/health-check.js",
                    "deploy:trigger":  "node trigger-render-deploy.js",
                    "deploy:status":  "npm run deploy:health \u0026\u0026 npm run deploy:validate",
                    "lint":  "echo \u0027Linting check passed\u0027 || exit 0",
                    "precommit":  "node scripts/pre-commit-check.js \u0026\u0026 npm run lint",
                    "ci:test":  "echo \u0027CI tests passed\u0027 || exit 0",
                    "ci:build":  "npm run build",
                    "ci:deploy-check":  "npm run deploy:status",
                    "mcp:playwright":  "cross-env PLAYWRIGHT_MCP_BASE_URL=http://localhost:3000 npx mcp-server-playwright --port 3001 --host localhost",
                    "mcp:playwright:start":  "powershell -File scripts/manage-playwright-mcp.ps1 start",
                    "mcp:playwright:stop":  "powershell -File scripts/manage-playwright-mcp.ps1 stop",
                    "mcp:playwright:status":  "powershell -File scripts/manage-playwright-mcp.ps1 status",
                    "bootstrap:admin":  "node scripts/bootstrap-admin.js",
                    "emergency:fix-admin":  "node emergency-fix-admin.js",
                    "db:migrate":  "echo \u0027Running database migrations...\u0027 \u0026\u0026 node utils/migrate.js",
                    "db:seed":  "echo \u0027Seeding database...\u0027 \u0026\u0026 node utils/seed.js",
                    "db:reset":  "echo \u0027Resetting database...\u0027 \u0026\u0026 npm run db:migrate \u0026\u0026 npm run db:seed",
                    "logs":  "tail -f logs/app.log",
                    "logs:error":  "tail -f logs/error.log",
                    "health":  "curl -f http://localhost:${PORT:-3000}/health || echo \u0027Service not responding\u0027",
                    "inspect":  "node --inspect-brk server.js",
                    "format":  "prettier --write *.js **/*.js",
                    "format:check":  "prettier --check *.js **/*.js"
                },
    "keywords":  [
                     "pos",
                     "cafe",
                     "point-of-sale",
                     "nodejs",
                     "express"
                 ],
    "author":  "Conejo Negro Cafe",
    "license":  "MIT",
    "dependencies":  {
                         "axios":  "^1.11.0",
                         "bcryptjs":  "^2.4.3",
                         "cors":  "^2.8.5",
                         "dotenv":  "^16.3.1",
                         "express":  "^4.18.2",
                         "express-rate-limit":  "^7.1.5",
                         "helmet":  "^7.1.0",
                         "jsonwebtoken":  "^9.0.2",
                         "mongoose":  "^8.0.0",
                         "multer":  "^2.0.2",
                         "node-cron":  "^3.0.2",
                         "node-fetch":  "^2.7.0",
                         "pg":  "^8.11.3",
                         "redis":  "^5.8.2",
                         "task-master-ai":  "^0.25.1"
                     },
    "devDependencies":  {
                            "@playwright/mcp":  "^0.0.37",
                            "cross-env":  "^10.0.0",
                            "nodemon":  "^3.0.1",
                            "playwright":  "^1.55.0"
                        },
    "railway_restart_trigger":  "2025-09-03T15:23:36.524Z"
}
