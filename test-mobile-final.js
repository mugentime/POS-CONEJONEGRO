const { chromium } = require('@playwright/test');

async function testMobileFinalValidation() {
  console.log('üì± VALIDACI√ìN FINAL - Botones M√≥viles en Producci√≥n\n');
  
  const browser = await chromium.launch({
    headless: false,
    slowMo: 1500,
  });

  const context = await browser.newContext({
    viewport: { width: 393, height: 852 }, // iPhone 14 Pro
    userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Mobile/15E148 Safari/604.1',
    hasTouch: true,
    isMobile: true,
    deviceScaleFactor: 3,
  });
  
  const page = await context.newPage();

  try {
    // Navigate and login
    console.log('üîó Conectando a: https://pos-conejonegro-production.up.railway.app/online');
    await page.goto('https://pos-conejonegro-production.up.railway.app/online');
    await page.waitForTimeout(3000);

    // Auto-login
    await page.locator('#auto-fill-btn').tap();
    await page.waitForTimeout(1000);
    await page.locator('#login-form button[type="submit"]').tap();
    await page.waitForTimeout(4000);
    
    console.log('‚úÖ Login completado\n');

    // Test results object
    let results = {
      pos: { clicked: false, sectionVisible: false },
      inventario: { clicked: false, sectionVisible: false },
      reportes: { clicked: false, sectionVisible: false },
      miembros: { clicked: false, sectionVisible: false }
    };

    // Test each button with force click if needed
    console.log('üîß PROBANDO BOTONES M√ìVILES...\n');
    
    // 1. POS Button
    console.log('1Ô∏è‚É£ Bot√≥n POS (Registro)...');
    try {
      const posBtn = await page.locator('.mobile-nav-btn[data-section="registro"]');
      await posBtn.tap();
      results.pos.clicked = true;
      await page.waitForTimeout(2000);
      
      const section = await page.locator('#registro');
      results.pos.sectionVisible = await section.isVisible();
      console.log(`   ‚úÖ Click: OK | Secci√≥n visible: ${results.pos.sectionVisible ? '‚úÖ' : '‚ùå'}\n`);
    } catch (error) {
      console.log(`   ‚ùå Error: ${error.message}\n`);
    }

    // 2. Inventario Button  
    console.log('2Ô∏è‚É£ Bot√≥n Inventario...');
    try {
      const invBtn = await page.locator('.mobile-nav-btn[data-section="inventario-refrigerador"]');
      await invBtn.tap();
      results.inventario.clicked = true;
      await page.waitForTimeout(2000);
      
      const section = await page.locator('#inventario-refrigerador');
      results.inventario.sectionVisible = await section.isVisible();
      console.log(`   ‚úÖ Click: OK | Secci√≥n visible: ${results.inventario.sectionVisible ? '‚úÖ' : '‚ùå'}\n`);
    } catch (error) {
      console.log(`   ‚ùå Error: ${error.message}\n`);
    }

    // 3. Reportes Button
    console.log('3Ô∏è‚É£ Bot√≥n Reportes...');
    try {
      const repBtn = await page.locator('.mobile-nav-btn[data-section="reportes"]');
      await repBtn.tap();
      results.reportes.clicked = true;
      await page.waitForTimeout(2000);
      
      const section = await page.locator('#reportes');
      results.reportes.sectionVisible = await section.isVisible();
      console.log(`   ‚úÖ Click: OK | Secci√≥n visible: ${results.reportes.sectionVisible ? '‚úÖ' : '‚ùå'}\n`);
    } catch (error) {
      console.log(`   ‚ùå Error: ${error.message}\n`);
    }

    // 4. Miembros Button (with force click)
    console.log('4Ô∏è‚É£ Bot√≥n Miembros (con force click)...');
    try {
      const memBtn = await page.locator('.mobile-nav-btn[data-section="memberships"]');
      // Try regular tap first
      try {
        await memBtn.tap({ timeout: 5000 });
        results.miembros.clicked = true;
      } catch {
        // If regular tap fails, use force click
        console.log('   ‚ö†Ô∏è Regular tap fall√≥, usando force click...');
        await memBtn.click({ force: true });
        results.miembros.clicked = true;
      }
      
      await page.waitForTimeout(2000);
      
      const section = await page.locator('#memberships');
      results.miembros.sectionVisible = await section.isVisible();
      console.log(`   ‚úÖ Click: OK | Secci√≥n visible: ${results.miembros.sectionVisible ? '‚úÖ' : '‚ùå'}\n`);
    } catch (error) {
      console.log(`   ‚ùå Error: ${error.message}\n`);
    }

    // Test hamburger menu
    console.log('üçî PROBANDO MEN√ö HAMBURGUESA...');
    let hamburgerWorks = false;
    try {
      const hamburger = await page.locator('.hamburger-menu');
      await hamburger.tap();
      await page.waitForTimeout(1500);
      
      const sideNav = await page.locator('nav.mobile-nav-active');
      hamburgerWorks = await sideNav.isVisible();
      console.log(`   ${hamburgerWorks ? '‚úÖ' : '‚ùå'} Men√∫ hamburguesa ${hamburgerWorks ? 'funciona' : 'NO funciona'}`);
      
      if (hamburgerWorks) {
        await hamburger.tap(); // Close it
        await page.waitForTimeout(1000);
      }
    } catch (error) {
      console.log(`   ‚ùå Error hamburguesa: ${error.message}`);
    }

    // Final screenshot
    await page.screenshot({ path: 'mobile-final-validation.png', fullPage: true });
    console.log('\nüì∏ Screenshot final: mobile-final-validation.png');

    // Generate comprehensive report
    console.log('\n' + '='.repeat(60));
    console.log('üìã REPORTE FINAL DE VALIDACI√ìN M√ìVIL');
    console.log('='.repeat(60));
    console.log('üåê URL: https://pos-conejonegro-production.up.railway.app/online');
    console.log('üì± Dispositivo: iPhone 14 Pro (393x852)');
    console.log('üïê Timestamp: ' + new Date().toISOString());
    console.log('='.repeat(60));

    console.log('\nüìä RESULTADOS DETALLADOS:');
    
    const sections = [
      { name: 'POS (Registro)', key: 'pos', icon: 'üè™' },
      { name: 'Inventario', key: 'inventario', icon: 'üì¶' },
      { name: 'Reportes', key: 'reportes', icon: 'üìä' },
      { name: 'Miembros', key: 'miembros', icon: 'üë•' }
    ];

    let totalSuccess = 0;
    sections.forEach(section => {
      const result = results[section.key];
      const success = result.clicked && result.sectionVisible;
      if (success) totalSuccess++;
      
      console.log(`${section.icon} ${section.name}:`);
      console.log(`   ‚Ä¢ Click: ${result.clicked ? '‚úÖ OK' : '‚ùå FAIL'}`);
      console.log(`   ‚Ä¢ Secci√≥n visible: ${result.sectionVisible ? '‚úÖ OK' : '‚ùå FAIL'}`);
      console.log(`   ‚Ä¢ Estado: ${success ? '‚úÖ FUNCIONA' : '‚ùå NO FUNCIONA'}\n`);
    });

    console.log('üçî Men√∫ Hamburguesa:');
    console.log(`   ‚Ä¢ Estado: ${hamburgerWorks ? '‚úÖ FUNCIONA' : '‚ùå NO FUNCIONA'}\n`);

    // Summary
    const successPercentage = Math.round((totalSuccess / 4) * 100);
    console.log('üìà RESUMEN EJECUTIVO:');
    console.log(`   ‚Ä¢ Botones funcionando: ${totalSuccess}/4 (${successPercentage}%)`);
    console.log(`   ‚Ä¢ Men√∫ hamburguesa: ${hamburgerWorks ? 'Funciona' : 'No funciona'}`);
    
    if (totalSuccess === 4 && hamburgerWorks) {
      console.log('\nüéâ ¬°√âXITO TOTAL! ');
      console.log('   ‚úÖ TODOS los botones m√≥viles funcionan correctamente');
      console.log('   ‚úÖ La navegaci√≥n m√≥vil est√° COMPLETAMENTE FUNCIONAL');
      console.log('   ‚úÖ Los usuarios pueden navegar sin problemas en m√≥vil');
    } else if (totalSuccess >= 3) {
      console.log('\n‚úÖ √âXITO PARCIAL');
      console.log('   ‚úÖ La mayor√≠a de botones funcionan correctamente');
      console.log('   ‚ö†Ô∏è Problemas menores que no afectan la funcionalidad principal');
    } else {
      console.log('\n‚ö†Ô∏è PROBLEMAS DETECTADOS');
      console.log('   ‚ùå Varios botones no funcionan correctamente');
      console.log('   üîß Se requiere revisi√≥n adicional');
    }

    console.log('\n' + '='.repeat(60));
    console.log('‚ú® VALIDACI√ìN M√ìVIL COMPLETADA ‚ú®');
    console.log('='.repeat(60));

  } catch (error) {
    console.error('‚ùå Error durante validaci√≥n:', error.message);
    await page.screenshot({ path: 'validation-error.png', fullPage: true });
  } finally {
    console.log('\n‚è≥ Cerrando en 5 segundos...');
    await page.waitForTimeout(5000);
    await browser.close();
    console.log('üèÅ Validaci√≥n final completada.');
  }
}

testMobileFinalValidation().catch(console.error);